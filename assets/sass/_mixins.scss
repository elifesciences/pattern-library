// Put all general mixins, and any helper functions, in this file.
// Mixins for a single pattern may be put in that pattern's scss file instead if that makes sense, use judgement.

@function get-px-from-rem($size_in_rem) {
  @return $size_in_rem * $font-size-base-in-px;
}

@function get-rem-from-px($size_in_px) {
  @return $size_in_px/$font-size-base-in-px;
}

@mixin font-size($size_in_px) {
  font-size: #{$size_in_px}px;
  font-size: get-rem-from-px($size_in_px) * 1rem;
}

@mixin padding($size_in_px, $dimension: "") {
  @if $dimension == top or $dimension == right or $dimension == bottom or $dimension == left {
    padding-#{$dimension}: #{$size_in_px}px;
    padding-#{$dimension}: #{get-rem-from-px($size_in_px)}rem;
  }
  @else if $dimension == "" and type_of($size_in_px) == list {
    $parts-px: ();
    $parts-rem: ();
    @each $size in $size_in_px {
      $parts-px: append($parts-px, #{$size}px, "space")
    }
    @each $size in $size_in_px {
      $parts-rem: append($parts-rem, #{get-rem-from-px($size)}rem, "space")
    }
    padding: $parts-px;
    padding: $parts-rem;
  }
  @else {
    padding: #{$size_in_px}px;
    padding: #{get-rem-from-px($size_in_px)}rem;
  }
}

@mixin margin($size_in_px, $dimension: "") {
  @if $dimension == top or $dimension == right or $dimension == bottom or $dimension == left {
    margin-#{$dimension}: #{$size_in_px}px;
    margin-#{$dimension}: #{get-rem-from-px($size_in_px)}rem;
  }
  @else if $dimension == "" and type_of($size_in_px) == list {
    $parts-px: ();
    $parts-rem: ();
    @each $size in $size_in_px {
      $parts-px: append($parts-px, #{$size}px, "space")
    }
    @each $size in $size_in_px {
      $parts-rem: append($parts-rem, #{get-rem-from-px($size)}rem, "space")
    }
    margin: $parts-px;
    margin: $parts-rem;
  }
  @else {
    margin: #{$size_in_px}px;
    margin: #{get-rem-from-px($size_in_px)}rem;
  }
}

@mixin height($size_in_px) {
  height: #{$size_in_px}px;
  height: #{get-rem-from-px($size_in_px)}rem;
}

@mixin width($size_in_px) {
  width: #{$size_in_px}px;
  width: #{get-rem-from-px($size_in_px)}rem;
}

@mixin constrain-width($size_in_px, $extreme) {
  @if $extreme == min or $extreme == max {
    #{$extreme}-width: #{$size_in_px}px;
    #{$extreme}-width: #{get-rem-from-px($size_in_px)}rem;
  }
}

@mixin visuallyhidden() {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
}

@mixin unhidden() {
  clip: auto;
  height: auto;
  margin: 0;
  overflow: auto;
  position: static;
  width: auto;
}

@mixin article-with-background() {
  background-color: $color-primary;
  color: $color-text--reverse;

  .meta {
    color: $color-text--reverse;
  }

  .meta:after {
    border-bottom-width: 0;
    padding-top: 0;
  }

  .meta__type {
    color: $color-text--reverse;
  }

  .meta__type:hover,
  .meta__type:active {
    color: $color-primary-dark;
  }

  .content-header__subject_link {
    color: $color-text--reverse;
  }

  .content-header__strapline {
    color: $color-text--reverse;
  }
}

@mixin tooltip-box() {
  background-color: $color-text-ui-background--reverse;
  color: $color-text-ui-background;
  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.5);
  @include padding(16);
}

@mixin arrow($direction: "up", $size: 7, $color: $color-text-ui-background--reverse) {
  border-style: solid;
  border-width: #{$size}px;
  border-color: transparent;

  @if $direction == "right" {
    border-left-color: $color;
    border-right-width: 0;

  } @else if $direction == "down" {
    border-bottom-width: 0;
    border-top-color: $color;

  } @else if $direction == "left" {
    border-left-width: 0;
    border-right-color: $color;

  } @else if $direction == "up" {
    border-bottom-color: $color;
    border-top-width: 0;
  }
  content: "";
  height: 0;
  width: 0;
}

@mixin nospace($direction: "all") {
  @if $direction == "all" {
    margin: 0;
    padding: 0;
  } @else if $direction == "top" {
    margin-top: 0;
    padding-top: 0;
  } @else if $direction == "right" {
    margin-right: 0;
    padding-right: 0;
  } @else if $direction == "bottom" {
    margin-bottom: 0;
    padding-bottom: 0;
  } @else if $direction == "left" {
    margin-left: 0;
    padding-left: 0;
  }
}

// Doesn't apply to a grid listing containing only block-links
@mixin widths-for-generic-grid-listing-items() {

  @include constrain-width($max-width-grid-listing-item, "max");
  @include constrain-width($min-width-grid-listing-item, "min");
  @include width($min-width-grid-listing-item);

  @supports (display: flex) {
    width: auto;
  }

}

@mixin body-para {
  @include body-typeg();
}
