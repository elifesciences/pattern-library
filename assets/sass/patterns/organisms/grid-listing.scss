@import "../../definitions";

.grid-listing {
  list-style: none;
  margin: 0 auto;
  padding-left: 0;
}

.grid-listing--block-link {

  .grid-listing-item {
    border: 1px solid $color-text-dividers;
    border-bottom-width: 0;
    @include margin(2, "bottom");
  }

  .grid-listing-item:last-child {
    border-bottom-width: 1px;
    margin-bottom: 0;
  }
}

.grid-listing--archive-nav-link {

  @include width($min-width-block-link);
  //@supports (display: flex) {
  //  width: auto;
  //}

  .grid-listing-item {
    display: table-row;
    margin: 0 auto;
    // TODO: consider renaming as now used out of original context
    max-width: #{$max-width-block-link}px;
    max-width: #{$max-width-block-link-in-rem}rem;

    //@supports (display: flex) {
    //  display: block;
    //  margin: 0 auto;
    //}
  }

}

@media only all and (min-width: #{get-rem-from-px($bkpt-block-link)}em) {

  .grid-listing {
    //display: flex;
    flex-wrap: wrap;
    justify-content: flex-start;

    @include width($min-width-block-link * 2 + 20);
    //@supports (display: flex) {
    //  width: auto;
    //}

  }

  .grid-listing-item {
    flex: 1 0 #{$min-width-block-link-in-rem}rem;
    float: left;
    @include margin(0 20 20 0);
    // TODO: consider renaming this variable if kept in this context
    max-width: #{$max-width-block-link}px;
    max-width: #{$max-width-block-link-in-rem}rem;

    &:nth-child(2n) {
      margin-right: 0;
    }

    &:last-of-type {
      margin-right: 0;
    }
  }

  .grid-listing--block-link {

    // Needs 2 levels of specificity to apply the margin in this MQ, as it overrides rule specified
    // with 2 (justified) levels of specificity outside of the MQ.
    .grid-listing-item {

      border: none;
      @include margin(20, "bottom");
    }

  }

  .grid-listing--archive-nav-link {

    .grid-listing-item {

      @include margin(20, "right");
      // TODO: consider renaming as now used out of original context
      max-width: #{$max-width-block-link}px;
      max-width: #{$max-width-block-link-in-rem}rem;

      &:nth-child(2n) {
        margin-right: 0;
      }

      .grid-listing-item:nth-child(3) {
        clear: left;
      }

    }

  }

}

@media only all and (min-width: #{get-rem-from-px($bkpt-block-link-listing--medium-width)}em) {

  .grid-listing {

    @include width($min-width-block-link * 3 + 40);
    //@supports (display: flex) {
    //  width: auto;
    //}

  }

  .grid-listing-item {
    max-width: 28vw;
  }

  //@supports (display: flex) {
  //
  //  .grid-listing-item:nth-child(2n) {
  //      @include margin(20, "right");
  //    }
  //
  //  .grid-listing-item:nth-child(3n) {
  //    margin-right: 0;
  //  }
  //
  //}


  .grid-listing--archive-nav-link {

    .grid-listing-item:nth-child(3) {
      clear: none;
    }
    .grid-listing-item:nth-child(4) {
      clear: left;

      // TODO: Is this necessary? Don't think so as flex trumps float.
      //@supports (display: flex) {
      //  clear: none;
      //}
    }

  }

}

@media only all and (min-width: #{get-rem-from-px($bkpt-block-link-listing--wide-screen)}em) {

  .grid-listing {
    display: block;
    max-width: #{$max-site-width-in-rem}rem;
  }

  .grid-listing-item {
    max-width: 262px;
    width: #{$min-width-block-link}px;
  }

  .grid-listing-item:nth-child(3n) {
    @include margin(20, "right");
  }

  .grid-listing-item:nth-child(4n) {
    margin-right: 0;
  }

}

@media only all and (min-width: #{$viewport-width-when-site-hits-max-width-in-rem}em) {

  .grid-listing {
    display: block;
    @include width($max-site-width);
  }

  .grid-listing-item {
    @include width($med-width-block-link);
  }

  .grid-listing--archive-nav-link {

    .grid-listing-item:nth-child(4) {
      clear: none;
    }

  }

}
